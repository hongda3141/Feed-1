// Code generated by protoc-gen-go. DO NOT EDIT.
// source: batchserver.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListRequest struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	TypeStatus           int32    `protobuf:"varint,3,opt,name=typeStatus,proto3" json:"typeStatus,omitempty"`
	Desc                 string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Username             string   `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Time                 string   `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	UserId               int64    `protobuf:"zigzag64,7,opt,name=userId,proto3" json:"userId,omitempty"`
	IsProd               bool     `protobuf:"varint,8,opt,name=isProd,proto3" json:"isProd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{0}
}
func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (dst *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(dst, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ListRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ListRequest) GetTypeStatus() int32 {
	if m != nil {
		return m.TypeStatus
	}
	return 0
}

func (m *ListRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ListRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ListRequest) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *ListRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ListRequest) GetIsProd() bool {
	if m != nil {
		return m.IsProd
	}
	return false
}

type ListResponseItem struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BatchType            string   `protobuf:"bytes,2,opt,name=batchType,proto3" json:"batchType,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	StartTime            string   `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string   `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	CostTime             string   `protobuf:"bytes,7,opt,name=costTime,proto3" json:"costTime,omitempty"`
	Status               int32    `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Num                  int64    `protobuf:"zigzag64,9,opt,name=num,proto3" json:"num,omitempty"`
	CreateTime           int64    `protobuf:"zigzag64,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponseItem) Reset()         { *m = ListResponseItem{} }
func (m *ListResponseItem) String() string { return proto.CompactTextString(m) }
func (*ListResponseItem) ProtoMessage()    {}
func (*ListResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{1}
}
func (m *ListResponseItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponseItem.Unmarshal(m, b)
}
func (m *ListResponseItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponseItem.Marshal(b, m, deterministic)
}
func (dst *ListResponseItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponseItem.Merge(dst, src)
}
func (m *ListResponseItem) XXX_Size() int {
	return xxx_messageInfo_ListResponseItem.Size(m)
}
func (m *ListResponseItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponseItem.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponseItem proto.InternalMessageInfo

func (m *ListResponseItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ListResponseItem) GetBatchType() string {
	if m != nil {
		return m.BatchType
	}
	return ""
}

func (m *ListResponseItem) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ListResponseItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ListResponseItem) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ListResponseItem) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *ListResponseItem) GetCostTime() string {
	if m != nil {
		return m.CostTime
	}
	return ""
}

func (m *ListResponseItem) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ListResponseItem) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *ListResponseItem) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type ListResponse struct {
	Lists                []*ListResponseItem `protobuf:"bytes,1,rep,name=lists,proto3" json:"lists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{2}
}
func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (dst *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(dst, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetLists() []*ListResponseItem {
	if m != nil {
		return m.Lists
	}
	return nil
}

type AddRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BatchType            string   `protobuf:"bytes,2,opt,name=BatchType,proto3" json:"BatchType,omitempty"`
	FilePath             string   `protobuf:"bytes,3,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	UserId               int64    `protobuf:"zigzag64,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	IsProd               bool     `protobuf:"varint,5,opt,name=IsProd,proto3" json:"IsProd,omitempty"`
	Description          string   `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	Param                string   `protobuf:"bytes,7,opt,name=Param,proto3" json:"Param,omitempty"`
	SjFileInfo           string   `protobuf:"bytes,8,opt,name=SjFileInfo,proto3" json:"SjFileInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{3}
}
func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (dst *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(dst, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddRequest) GetBatchType() string {
	if m != nil {
		return m.BatchType
	}
	return ""
}

func (m *AddRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *AddRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AddRequest) GetIsProd() bool {
	if m != nil {
		return m.IsProd
	}
	return false
}

func (m *AddRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddRequest) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func (m *AddRequest) GetSjFileInfo() string {
	if m != nil {
		return m.SjFileInfo
	}
	return ""
}

type AddResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=Reason,proto3" json:"Reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{4}
}
func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (dst *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(dst, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *AddResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type GetRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{5}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetResponseItem struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BatchType            string   `protobuf:"bytes,2,opt,name=BatchType,proto3" json:"BatchType,omitempty"`
	UserId               int64    `protobuf:"zigzag64,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	StartTime            int64    `protobuf:"zigzag64,5,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponseItem) Reset()         { *m = GetResponseItem{} }
func (m *GetResponseItem) String() string { return proto.CompactTextString(m) }
func (*GetResponseItem) ProtoMessage()    {}
func (*GetResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{6}
}
func (m *GetResponseItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponseItem.Unmarshal(m, b)
}
func (m *GetResponseItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponseItem.Marshal(b, m, deterministic)
}
func (dst *GetResponseItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponseItem.Merge(dst, src)
}
func (m *GetResponseItem) XXX_Size() int {
	return xxx_messageInfo_GetResponseItem.Size(m)
}
func (m *GetResponseItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponseItem.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponseItem proto.InternalMessageInfo

func (m *GetResponseItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetResponseItem) GetBatchType() string {
	if m != nil {
		return m.BatchType
	}
	return ""
}

func (m *GetResponseItem) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetResponseItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetResponseItem) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetResponseItem) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type GetResponse struct {
	Lists                []*GetResponseItem `protobuf:"bytes,1,rep,name=lists,proto3" json:"lists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{7}
}
func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (dst *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(dst, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetLists() []*GetResponseItem {
	if m != nil {
		return m.Lists
	}
	return nil
}

type StickRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StickRequest) Reset()         { *m = StickRequest{} }
func (m *StickRequest) String() string { return proto.CompactTextString(m) }
func (*StickRequest) ProtoMessage()    {}
func (*StickRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{8}
}
func (m *StickRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StickRequest.Unmarshal(m, b)
}
func (m *StickRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StickRequest.Marshal(b, m, deterministic)
}
func (dst *StickRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StickRequest.Merge(dst, src)
}
func (m *StickRequest) XXX_Size() int {
	return xxx_messageInfo_StickRequest.Size(m)
}
func (m *StickRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StickRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StickRequest proto.InternalMessageInfo

func (m *StickRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StickResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BatchType            string   `protobuf:"bytes,2,opt,name=BatchType,proto3" json:"BatchType,omitempty"`
	UserId               int64    `protobuf:"zigzag64,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	StartTime            int64    `protobuf:"zigzag64,5,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StickResponse) Reset()         { *m = StickResponse{} }
func (m *StickResponse) String() string { return proto.CompactTextString(m) }
func (*StickResponse) ProtoMessage()    {}
func (*StickResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{9}
}
func (m *StickResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StickResponse.Unmarshal(m, b)
}
func (m *StickResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StickResponse.Marshal(b, m, deterministic)
}
func (dst *StickResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StickResponse.Merge(dst, src)
}
func (m *StickResponse) XXX_Size() int {
	return xxx_messageInfo_StickResponse.Size(m)
}
func (m *StickResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StickResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StickResponse proto.InternalMessageInfo

func (m *StickResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StickResponse) GetBatchType() string {
	if m != nil {
		return m.BatchType
	}
	return ""
}

func (m *StickResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *StickResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StickResponse) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *StickResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type CancelRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelRequest) Reset()         { *m = CancelRequest{} }
func (m *CancelRequest) String() string { return proto.CompactTextString(m) }
func (*CancelRequest) ProtoMessage()    {}
func (*CancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{10}
}
func (m *CancelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelRequest.Unmarshal(m, b)
}
func (m *CancelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelRequest.Marshal(b, m, deterministic)
}
func (dst *CancelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelRequest.Merge(dst, src)
}
func (m *CancelRequest) XXX_Size() int {
	return xxx_messageInfo_CancelRequest.Size(m)
}
func (m *CancelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelRequest proto.InternalMessageInfo

func (m *CancelRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CancelResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BatchType            string   `protobuf:"bytes,2,opt,name=BatchType,proto3" json:"BatchType,omitempty"`
	UserId               int64    `protobuf:"zigzag64,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	StartTime            int64    `protobuf:"zigzag64,5,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelResponse) Reset()         { *m = CancelResponse{} }
func (m *CancelResponse) String() string { return proto.CompactTextString(m) }
func (*CancelResponse) ProtoMessage()    {}
func (*CancelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{11}
}
func (m *CancelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelResponse.Unmarshal(m, b)
}
func (m *CancelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelResponse.Marshal(b, m, deterministic)
}
func (dst *CancelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelResponse.Merge(dst, src)
}
func (m *CancelResponse) XXX_Size() int {
	return xxx_messageInfo_CancelResponse.Size(m)
}
func (m *CancelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelResponse proto.InternalMessageInfo

func (m *CancelResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CancelResponse) GetBatchType() string {
	if m != nil {
		return m.BatchType
	}
	return ""
}

func (m *CancelResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CancelResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CancelResponse) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CancelResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type DeleteRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{12}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(dst, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BatchType            string   `protobuf:"bytes,2,opt,name=BatchType,proto3" json:"BatchType,omitempty"`
	UserId               int64    `protobuf:"zigzag64,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	StartTime            int64    `protobuf:"zigzag64,5,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_batchserver_253bba129c5970bf, []int{13}
}
func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(dst, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteResponse) GetBatchType() string {
	if m != nil {
		return m.BatchType
	}
	return ""
}

func (m *DeleteResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *DeleteResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DeleteResponse) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *DeleteResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*ListRequest)(nil), "protos.ListRequest")
	proto.RegisterType((*ListResponseItem)(nil), "protos.ListResponseItem")
	proto.RegisterType((*ListResponse)(nil), "protos.ListResponse")
	proto.RegisterType((*AddRequest)(nil), "protos.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "protos.AddResponse")
	proto.RegisterType((*GetRequest)(nil), "protos.GetRequest")
	proto.RegisterType((*GetResponseItem)(nil), "protos.GetResponseItem")
	proto.RegisterType((*GetResponse)(nil), "protos.GetResponse")
	proto.RegisterType((*StickRequest)(nil), "protos.StickRequest")
	proto.RegisterType((*StickResponse)(nil), "protos.StickResponse")
	proto.RegisterType((*CancelRequest)(nil), "protos.CancelRequest")
	proto.RegisterType((*CancelResponse)(nil), "protos.CancelResponse")
	proto.RegisterType((*DeleteRequest)(nil), "protos.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "protos.DeleteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BatchServiceClient is the client API for BatchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BatchServiceClient interface {
	ListBatch(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	AddBatch(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	GetBatch(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	StickBatch(ctx context.Context, in *StickRequest, opts ...grpc.CallOption) (*StickResponse, error)
	CancelBatch(ctx context.Context, in *CancelRequest, opts ...grpc.CallOption) (*CancelResponse, error)
	DeleteBatch(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type batchServiceClient struct {
	cc *grpc.ClientConn
}

func NewBatchServiceClient(cc *grpc.ClientConn) BatchServiceClient {
	return &batchServiceClient{cc}
}

func (c *batchServiceClient) ListBatch(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/protos.BatchService/ListBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batchServiceClient) AddBatch(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/protos.BatchService/AddBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batchServiceClient) GetBatch(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/protos.BatchService/GetBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batchServiceClient) StickBatch(ctx context.Context, in *StickRequest, opts ...grpc.CallOption) (*StickResponse, error) {
	out := new(StickResponse)
	err := c.cc.Invoke(ctx, "/protos.BatchService/StickBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batchServiceClient) CancelBatch(ctx context.Context, in *CancelRequest, opts ...grpc.CallOption) (*CancelResponse, error) {
	out := new(CancelResponse)
	err := c.cc.Invoke(ctx, "/protos.BatchService/CancelBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batchServiceClient) DeleteBatch(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/protos.BatchService/DeleteBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BatchServiceServer is the server API for BatchService service.
type BatchServiceServer interface {
	ListBatch(context.Context, *ListRequest) (*ListResponse, error)
	AddBatch(context.Context, *AddRequest) (*AddResponse, error)
	GetBatch(context.Context, *GetRequest) (*GetResponse, error)
	StickBatch(context.Context, *StickRequest) (*StickResponse, error)
	CancelBatch(context.Context, *CancelRequest) (*CancelResponse, error)
	DeleteBatch(context.Context, *DeleteRequest) (*DeleteResponse, error)
}

func RegisterBatchServiceServer(s *grpc.Server, srv BatchServiceServer) {
	s.RegisterService(&_BatchService_serviceDesc, srv)
}

func _BatchService_ListBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatchServiceServer).ListBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BatchService/ListBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatchServiceServer).ListBatch(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BatchService_AddBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatchServiceServer).AddBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BatchService/AddBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatchServiceServer).AddBatch(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BatchService_GetBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatchServiceServer).GetBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BatchService/GetBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatchServiceServer).GetBatch(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BatchService_StickBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatchServiceServer).StickBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BatchService/StickBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatchServiceServer).StickBatch(ctx, req.(*StickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BatchService_CancelBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatchServiceServer).CancelBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BatchService/CancelBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatchServiceServer).CancelBatch(ctx, req.(*CancelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BatchService_DeleteBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatchServiceServer).DeleteBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BatchService/DeleteBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatchServiceServer).DeleteBatch(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BatchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.BatchService",
	HandlerType: (*BatchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListBatch",
			Handler:    _BatchService_ListBatch_Handler,
		},
		{
			MethodName: "AddBatch",
			Handler:    _BatchService_AddBatch_Handler,
		},
		{
			MethodName: "GetBatch",
			Handler:    _BatchService_GetBatch_Handler,
		},
		{
			MethodName: "StickBatch",
			Handler:    _BatchService_StickBatch_Handler,
		},
		{
			MethodName: "CancelBatch",
			Handler:    _BatchService_CancelBatch_Handler,
		},
		{
			MethodName: "DeleteBatch",
			Handler:    _BatchService_DeleteBatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "batchserver.proto",
}

func init() { proto.RegisterFile("batchserver.proto", fileDescriptor_batchserver_253bba129c5970bf) }

var fileDescriptor_batchserver_253bba129c5970bf = []byte{
	// 672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x56, 0x5d, 0x6e, 0xd3, 0x40,
	0x10, 0xae, 0xf3, 0xd7, 0x78, 0x9c, 0x96, 0xb2, 0x2d, 0xc5, 0x8a, 0xaa, 0x52, 0xf9, 0xa9, 0x2f,
	0xe4, 0xa1, 0x08, 0x09, 0x09, 0xa8, 0x44, 0xa9, 0x40, 0x96, 0x78, 0x88, 0x9c, 0xf4, 0x00, 0xae,
	0xbd, 0xa8, 0x86, 0xc4, 0x0e, 0xde, 0x0d, 0x12, 0x77, 0xe1, 0x0a, 0xc0, 0x49, 0xb8, 0x02, 0x97,
	0xe0, 0x02, 0xec, 0xee, 0x78, 0xed, 0x5d, 0x43, 0x90, 0x78, 0xa3, 0x4f, 0xde, 0xf9, 0x76, 0x66,
	0x67, 0xbf, 0x6f, 0x66, 0x27, 0x81, 0xbb, 0xd7, 0x31, 0x4f, 0x6e, 0x18, 0x2d, 0x3f, 0xd2, 0x72,
	0xb2, 0x2a, 0x0b, 0x5e, 0x90, 0x81, 0xfa, 0xb0, 0xe0, 0xbb, 0x03, 0xde, 0x9b, 0x8c, 0xf1, 0x88,
	0x7e, 0x58, 0x53, 0xc6, 0xc9, 0x21, 0x0c, 0x18, 0x8f, 0xf9, 0x9a, 0xf9, 0xce, 0x89, 0x73, 0xda,
	0x8f, 0x2a, 0x8b, 0x10, 0xe8, 0xf1, 0x4f, 0x2b, 0xea, 0x77, 0x14, 0xaa, 0xd6, 0xe4, 0x18, 0x40,
	0x7e, 0x67, 0xe8, 0xdf, 0x55, 0x3b, 0x06, 0x22, 0x63, 0x52, 0xca, 0x12, 0xbf, 0x27, 0x76, 0xdc,
	0x48, 0xad, 0xc9, 0x18, 0x86, 0x6b, 0x71, 0x91, 0x3c, 0x5e, 0x52, 0xbf, 0xaf, 0xf0, 0xda, 0x56,
	0x39, 0x32, 0x81, 0x0f, 0xd0, 0x5f, 0xae, 0xe5, 0x7d, 0xe4, 0x7e, 0x98, 0xfa, 0xdb, 0x02, 0x25,
	0x51, 0x65, 0x49, 0x3c, 0x63, 0xd3, 0xb2, 0x48, 0xfd, 0xa1, 0xc0, 0x87, 0x51, 0x65, 0x05, 0x9f,
	0x3b, 0xb0, 0x87, 0x7c, 0xd8, 0xaa, 0xc8, 0x19, 0x0d, 0x39, 0x5d, 0x92, 0x5d, 0xe8, 0x64, 0xa9,
	0x22, 0xe4, 0x46, 0x62, 0x45, 0x8e, 0xc0, 0x55, 0x8a, 0xcc, 0x35, 0x23, 0x37, 0x6a, 0x00, 0xeb,
	0x8a, 0xdd, 0xd6, 0x15, 0x4f, 0xc0, 0x93, 0x34, 0xca, 0x6c, 0xc5, 0xb3, 0x22, 0xaf, 0x98, 0x99,
	0x90, 0x3c, 0x5b, 0x48, 0x56, 0xf2, 0x79, 0x56, 0x33, 0x6c, 0x00, 0xe2, 0xc3, 0x36, 0xcd, 0xd3,
	0x79, 0xc3, 0x52, 0x9b, 0x32, 0x6b, 0x52, 0x30, 0x0c, 0xdb, 0xc6, 0xac, 0xda, 0x36, 0x8a, 0x32,
	0xb4, 0x8a, 0xb2, 0x07, 0xdd, 0x7c, 0xbd, 0xf4, 0x5d, 0xa5, 0x8c, 0x5c, 0xca, 0x92, 0x24, 0x25,
	0x8d, 0x39, 0x55, 0xe7, 0x80, 0xda, 0x30, 0x90, 0xe0, 0x1c, 0x46, 0xa6, 0x3a, 0x64, 0x02, 0xfd,
	0x85, 0xb0, 0x65, 0xb5, 0xbb, 0xa7, 0xde, 0x99, 0x8f, 0xdd, 0xc1, 0x26, 0x6d, 0x09, 0x23, 0x74,
	0x0b, 0x7e, 0x38, 0x00, 0x2f, 0xd2, 0x54, 0x77, 0x8b, 0x10, 0x36, 0xac, 0x85, 0x0d, 0x95, 0xb0,
	0x17, 0x6d, 0x61, 0x2f, 0x4c, 0x61, 0x5f, 0x65, 0x0b, 0x3a, 0x8d, 0xf9, 0x8d, 0x16, 0x56, 0xdb,
	0x92, 0xe2, 0x15, 0xd6, 0xb9, 0x87, 0x75, 0xbe, 0xaa, 0xeb, 0x1c, 0x62, 0x9d, 0xfb, 0x58, 0x67,
	0xb4, 0x64, 0x21, 0x2e, 0x8d, 0x42, 0xa0, 0x98, 0x26, 0x44, 0x0e, 0xa0, 0x3f, 0x8d, 0xcb, 0x78,
	0x59, 0xa9, 0x89, 0x86, 0x14, 0x68, 0xf6, 0x4e, 0x66, 0x0d, 0xf3, 0xb7, 0x85, 0x92, 0xd3, 0x8d,
	0x0c, 0x24, 0x78, 0x0e, 0x9e, 0xe2, 0x57, 0xe9, 0x23, 0xd2, 0x8b, 0xf5, 0x7a, 0xc1, 0xf5, 0x73,
	0x40, 0x0b, 0xf1, 0x98, 0x89, 0xcc, 0xc8, 0xb2, 0xb2, 0x82, 0x23, 0x80, 0xd7, 0x94, 0x6f, 0x90,
	0x27, 0xf8, 0xe6, 0xc0, 0x1d, 0xb5, 0x6d, 0xf7, 0xe6, 0x3f, 0x48, 0xd8, 0xc8, 0xd4, 0xb5, 0x64,
	0x6a, 0xc9, 0xd1, 0xfb, 0x5d, 0x0e, 0x71, 0xee, 0xcc, 0xea, 0x4b, 0x12, 0x35, 0x80, 0x3c, 0xb7,
	0x7a, 0xc6, 0x03, 0xe4, 0x89, 0x56, 0xf0, 0x0c, 0x3c, 0xe3, 0xc2, 0xe4, 0xa1, 0xdd, 0x2e, 0xf7,
	0x75, 0xbb, 0xb4, 0x48, 0xe9, 0x6e, 0x39, 0x86, 0xd1, 0x8c, 0x67, 0xc9, 0xfb, 0x4d, 0x7a, 0x7c,
	0x71, 0x60, 0xa7, 0x72, 0xa8, 0x12, 0xfc, 0xdf, 0x6a, 0x3c, 0x80, 0x9d, 0x97, 0x71, 0x9e, 0xd0,
	0xc5, 0x26, 0x42, 0x5f, 0x1d, 0xd8, 0xd5, 0x1e, 0xb7, 0x85, 0xd1, 0x25, 0x5d, 0x50, 0x4e, 0xff,
	0xc6, 0x48, 0x7b, 0xdc, 0x06, 0x46, 0x67, 0x3f, 0x3b, 0x30, 0x52, 0xd9, 0x67, 0xe2, 0xe7, 0x2e,
	0x4b, 0x28, 0x79, 0x02, 0xae, 0x9c, 0x66, 0x0a, 0x23, 0xfb, 0xf6, 0x80, 0x53, 0x9c, 0xc7, 0x07,
	0x7f, 0x9a, 0x7a, 0xc1, 0x16, 0x79, 0x0c, 0x43, 0x31, 0x0b, 0x30, 0x90, 0x68, 0x9f, 0x66, 0xfa,
	0x8d, 0xf7, 0x2d, 0xcc, 0x0c, 0x13, 0xef, 0xa1, 0x15, 0xd6, 0x4c, 0x85, 0x26, 0xcc, 0x78, 0x35,
	0x22, 0xec, 0xa9, 0x98, 0x4c, 0xf2, 0x2d, 0x60, 0x60, 0x7d, 0x27, 0xf3, 0x01, 0x8d, 0xef, 0xb5,
	0xd0, 0x3a, 0xf8, 0x1c, 0x3c, 0xec, 0x3b, 0x8c, 0xae, 0xfd, 0xac, 0x76, 0x1d, 0x1f, 0xb6, 0x61,
	0x33, 0x1e, 0xab, 0xdc, 0x8a, 0xb7, 0x9a, 0xa3, 0x89, 0xb7, 0x3b, 0x22, 0xd8, 0xba, 0xc6, 0xbf,
	0x13, 0x8f, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x24, 0x35, 0xcf, 0xa7, 0x6a, 0x08, 0x00, 0x00,
}
